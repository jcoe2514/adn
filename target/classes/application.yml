#logging.level.org.springframework=INFO
#logging.level.com.logger=INFO
#logging.level.com.zaxxer=DEBUG
#logging.level.root=ERROR

#spring.datasource.hikari.connectionTimeout=20000
#spring.datasource.hikari.maximumPoolSize=5

#logging.pattern.console=%-5level %logger{36} - %msg%n

## PostgreSQL
# Details for our datasource
spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/adn
    username: mateo
    password: m4t302514

# The SQL dialect makes Hibernate generate better SQL for the chosen database
  
  jpa:
    show-sql : true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    hibernate: 
      ddl-auto: create-drop
      naming:
         implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
# Hibernate properties
   
     
     
hibernate:
  transaction:
    jta.platform: org.hibernate.service.jta.platform.internal.WeblogicJtaPlatform



#For me it worked to set these variables in application.properties:
#spring.http.multipart.max-file-size=2MB
#spring.http.multipart.max-request-size=10MB
#spring.http.multipart.enabled=true 
#spring.http.multipart.location= /
#server.error.whitelabel.enabled=false